{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearcheBar.js","utils/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","props","business","this","className","src","imageSrc","alt","name","address","city","state","zipCode","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","id","SearchBar","term","location","sortBy","sortByOptions","handleSortByChange","bind","handleLocationChange","handleTermChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","renderSortByOptions","placeholder","onChange","Yelp","search","path","fetch","headers","Authorization","then","response","json","jsonResponse","hasOwnProperty","image_url","address1","zip_code","categories","title","review_count","App","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aa53419.chunk.js","sourcesContent":["import React from 'react';\r\nimport reactDom from 'react-dom';\r\nimport \"./Business.css\"\r\n\r\n\r\n\r\nclass Business extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n\r\n    render() {\r\n        let business = this.props.business;\r\n        return (\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    <img src={business.imageSrc} alt='' />\r\n                </div>\r\n                <h2>{business.name}</h2>\r\n                <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                        <p>{business.address}</p>\r\n                        <p>{business.city}</p>\r\n                        <p>{business.state} {business.zipCode}</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                        <h3>{business.category.toUpperCase}</h3>\r\n                        <h3 className=\"rating\">{business.rating} stars</h3>\r\n                        <p>{business.reviewCount} reviews</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Business;","import React from \"react\"\r\n\r\nimport Business from \"../Business/Business\"\r\n\r\nimport \"./BusinessList.css\"\r\n\r\nclass BusinessList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n       return (\r\n           <div className=\"BusinessList\">\r\n               {this.props.businesses.map(business => <Business business={business} key={business.id}/>)}\r\n           </div>\r\n       )\r\n    }\r\n}\r\n\r\nexport default BusinessList;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\"\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            term: \"\",\r\n            location: \"\",\r\n            sortBy: \"best_match\"\r\n        }\r\n        \r\n        \r\n        this.sortByOptions = {\r\n            \"Best Match\": \"best_match\",\r\n            \"Highest Rated\": \"rating\",\r\n            \"Most Reviewed\": \"review_count\"\r\n        }\r\n\r\n        //binding methods\r\n        this.handleSortByChange = this.handleSortByChange.bind(this)\r\n        this.handleLocationChange = this.handleLocationChange.bind(this)\r\n        this.handleTermChange = this.handleTermChange.bind(this)\r\n        this.handleSearch = this.handleSearch.bind(this)\r\n    }\r\n\r\n    getSortByClass(sortByOption) {\r\n        if (sortByOption == this.state.sortBy) {\r\n            return \"active\";\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    //change elements in query to yelp / state\r\n\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({sortBy: sortByOption})\r\n    }\r\n\r\n    handleTermChange(event) {\r\n        this.setState({\r\n            term: event.target.value\r\n        })\r\n    }\r\n\r\n    handleLocationChange(event) {\r\n        this.setState({\r\n            location: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleSearch(event) {\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy)\r\n        event.preventDefault()\r\n    }\r\n\r\n\r\n    renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = this.sortByOptions[sortByOption]\r\n            return <li key={sortByOptionValue} className={this.getSortByClass(sortByOptionValue)} onClick={() => this.handleSortByChange(sortByOptionValue)}>{sortByOption}</li>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input placeholder=\"Search Businesses\" onChange={this.handleTermChange}/>\r\n                    <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\r\n                </div>\r\n                <div className=\"SearchBar-submit\" onClick={this.handleSearch}>\r\n                    <a>Let's Go</a>\r\n                </div>\r\n            </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","const apiKey = \"hsA2tIG_4iZVwWiVz5dUBMZnDThXaJaHnj_L5zOSLLaRaqtYadHKeAc-5xLDHLf5K3lJfT8wGWXA8XvEzlL5n2pfZ8fNmdvCN3emEVSKItjHwL9oulnDlXuDtt1-YHYx\"\r\n\r\n\r\nconst Yelp = {\r\n    search: function(term, location, sortBy) {\r\n        const path = `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`\r\n        return fetch(path, {headers: {Authorization: `Bearer ${apiKey}`}})\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .then(jsonResponse => {\r\n            if (jsonResponse.hasOwnProperty(\"businesses\")) {\r\n                return jsonResponse.businesses.map(business => {\r\n                    let returnValue = {\r\n                        id: business.id,\r\n                        imageSrc: business.image_url,\r\n                        name: business.name,\r\n                        address: business.location.address1, \r\n                        city: business.location.city,\r\n                        state: business.location.state,\r\n                        zipCode: business.location.zip_code,\r\n                        category: business.categories[0].title,\r\n                        rating: business.rating,\r\n                        reviewCount: business.review_count\r\n                    }\r\n                    return returnValue\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default Yelp;","\nimport React from \"react\"\nimport './App.css';\nimport BusinessList from \"../BusinessList/BusinessList\";\nimport SearchBar from \"../SearchBar/SearcheBar\"\nimport Business from \"../Business/Business\";\nimport Yelp from \"../../utils/Yelp\"\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      businesses: []\n    }\n\n    this.searchYelp = this.searchYelp.bind(this)\n  }\n\n  searchYelp(term, location, sortBy) {\n    \n    Yelp.search(term, location, sortBy)\n    .then(businesses => {\n      console.log(businesses)\n      this.setState({\n        businesses: businesses\n      })\n    })\n  }\n\n\n\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp}/>\n        <BusinessList businesses={this.state.businesses}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}